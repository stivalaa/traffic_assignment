array [1..64] of float: PairMinusSumVHT = [0.502685233951, -4.74426476657, -12.5116507635, 23.8368512392, -0.240038767457, 11.3576822355, 3.90917623788, -5.50646775961, -4.74426476657, -449.896392763, 40.3787162378, 19.5073902383, -2.809694767, 9.59424123913, 5.05793923885, -7.37938375771, -12.5116507635, 40.3787162378, -21673.4256838, 29.5174982399, 5.56441123784, -2.45162275434, 84.8831902444, -7.48790175468, 23.8368512392, 19.5073902383, 29.5174982399, 16.3517132401, 27.321604237, 31.2198802456, 23.0903162435, 30.6091502458, -0.240038767457, -2.809694767, 5.56441123784, 27.321604237, -3539.87476376, 4.73170424253, 186.674283236, 65.7744162381, 11.3576822355, 9.59424123913, -2.45162275434, 31.2198802456, 4.73170424253, -153.580863759, 3279.94051725, 54.1082102433, 3.90917623788, 5.05793923885, 84.8831902444, 23.0903162435, 186.674283236, 3279.94051725, -16824.5987338, -82.4402737543, -5.50646775961, -7.37938375771, -7.48790175468, 30.6091502458, 65.7744162381, 54.1082102433, -82.4402737543, -3371.94649376];
array [1..8] of float: benefitVHT = [-0.5026852339506149, 449.896392762661, 21673.425683759153, -16.351713240146637, 3539.874763764441, 153.58086375892162, 16824.598733760417, 3371.9464937597513];
array [1..8] of float: cost = [999999.0, 465000.0, 4000000.0, 999999.99, 472000.0, 700000.0, 748000.0, 3999999.96];
var bool: BOOL____00001 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00004 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00008 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00012 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00016 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00020 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00024 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00028 :: is_defined_var :: var_is_introduced;
var 0.0..1.0: FLOAT____00003 :: is_defined_var :: var_is_introduced;
var 0.0..1.0: FLOAT____00006 :: is_defined_var :: var_is_introduced;
var 0.0..1.0: FLOAT____00007 :: is_defined_var :: var_is_introduced;
var 0.0..1.0: FLOAT____00010 :: is_defined_var :: var_is_introduced;
var 0.0..1.0: FLOAT____00011 :: is_defined_var :: var_is_introduced;
var 0.0..1.0: FLOAT____00014 :: is_defined_var :: var_is_introduced;
var 0.0..1.0: FLOAT____00015 :: is_defined_var :: var_is_introduced;
var 0.0..1.0: FLOAT____00018 :: is_defined_var :: var_is_introduced;
var 0.0..1.0: FLOAT____00019 :: is_defined_var :: var_is_introduced;
var 0.0..1.0: FLOAT____00022 :: is_defined_var :: var_is_introduced;
var 0.0..1.0: FLOAT____00023 :: is_defined_var :: var_is_introduced;
var 0.0..1.0: FLOAT____00026 :: is_defined_var :: var_is_introduced;
var 0.0..1.0: FLOAT____00027 :: is_defined_var :: var_is_introduced;
var 0.0..1.0: FLOAT____00030 :: is_defined_var :: var_is_introduced;
var 0.0..1.0: FLOAT____00031 :: is_defined_var :: var_is_introduced;
var 0.0..1.0: FLOAT____00032 :: is_defined_var :: var_is_introduced;
var 0.0..1.0: FLOAT____00033 :: is_defined_var :: var_is_introduced;
var 0.0..1.0: FLOAT____00034 :: is_defined_var :: var_is_introduced;
var 0.0..1.0: FLOAT____00035 :: is_defined_var :: var_is_introduced;
var 0.0..1.0: FLOAT____00036 :: is_defined_var :: var_is_introduced;
var 0.0..1.0: FLOAT____00037 :: is_defined_var :: var_is_introduced;
var 0.0..1.0: FLOAT____00038 :: is_defined_var :: var_is_introduced;
var 0.0..1.0: FLOAT____00039 :: is_defined_var :: var_is_introduced;
var 0.0..1.0: FLOAT____00040 :: is_defined_var :: var_is_introduced;
var 0.0..1.0: FLOAT____00041 :: is_defined_var :: var_is_introduced;
var 0.0..1.0: FLOAT____00042 :: is_defined_var :: var_is_introduced;
var 0.0..1.0: FLOAT____00043 :: is_defined_var :: var_is_introduced;
var 0.0..1.0: FLOAT____00044 :: is_defined_var :: var_is_introduced;
var 0.0..1.0: FLOAT____00045 :: is_defined_var :: var_is_introduced;
var 0.0..1.0: FLOAT____00046 :: is_defined_var :: var_is_introduced;
var 0.0..1.0: FLOAT____00047 :: is_defined_var :: var_is_introduced;
var 0.0..1.0: FLOAT____00048 :: is_defined_var :: var_is_introduced;
var 0.0..1.0: FLOAT____00049 :: is_defined_var :: var_is_introduced;
var 0.0..1.0: FLOAT____00050 :: is_defined_var :: var_is_introduced;
var 0.0..1.0: FLOAT____00051 :: is_defined_var :: var_is_introduced;
var 0.0..1.0: FLOAT____00052 :: is_defined_var :: var_is_introduced;
var -499859.4184762639..175306692.69422722: FLOAT____00053 :: is_defined_var :: var_is_introduced;
var 0.0..10000000.0: FLOAT____00054 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00002 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00005 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00009 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00013 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00017 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00021 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00025 :: is_defined_var :: var_is_introduced;
var 0..1: INT____00029 :: is_defined_var :: var_is_introduced;
var -499859.4184762639..175306692.69422722: totalBenefitDollarsPV :: output_var = FLOAT____00053;
var set of 1..8: upgradeSet :: output_var;
constraint bool2int(BOOL____00001, INT____00002) :: defines_var(INT____00002);
constraint bool2int(BOOL____00004, INT____00005) :: defines_var(INT____00005);
constraint bool2int(BOOL____00008, INT____00009) :: defines_var(INT____00009);
constraint bool2int(BOOL____00012, INT____00013) :: defines_var(INT____00013);
constraint bool2int(BOOL____00016, INT____00017) :: defines_var(INT____00017);
constraint bool2int(BOOL____00020, INT____00021) :: defines_var(INT____00021);
constraint bool2int(BOOL____00024, INT____00025) :: defines_var(INT____00025);
constraint bool2int(BOOL____00028, INT____00029) :: defines_var(INT____00029);
constraint float_lin_eq([-1.0, 999999.0, 465000.0, 4000000.0, 999999.99, 472000.0, 700000.0, 748000.0, 3999999.96], [FLOAT____00054, FLOAT____00003, FLOAT____00006, FLOAT____00010, FLOAT____00014, FLOAT____00018, FLOAT____00022, FLOAT____00026, FLOAT____00030], 0.0) :: defines_var(FLOAT____00054);
constraint float_lin_eq([-1.0, -1764.2318306920617, 1578963.3015228005, -16650.544613442788, 76065388.21703933, -43911.08200651442, -57388.22435243771, 83658.17982988461, 12423598.930519432, -842.4437511712019, 539009.7622308306, 39861.09630728365, 59047870.55598607, 13719.705065636537, 11834235.290599126, -19325.583964015863, 141713.76371920193, 68463.43689403366, -9860.947980336538, 33672.09665656201, 17751.42136711779, -25898.798765039905, 103595.06593811057, 19528.943286649996, -8604.252935904808, 297907.3503769807, -26279.65519671346, 95888.32256254807, 109569.77201580768, 81038.1291238221, 107426.34461266345, 16606.462005033172, 655154.9363571154, 230842.90314333173, 11511329.69996394, 189899.00710388942, -289333.6530799951], [FLOAT____00053, FLOAT____00003, FLOAT____00006, FLOAT____00007, FLOAT____00010, FLOAT____00011, FLOAT____00014, FLOAT____00015, FLOAT____00018, FLOAT____00019, FLOAT____00022, FLOAT____00023, FLOAT____00026, FLOAT____00027, FLOAT____00030, FLOAT____00031, FLOAT____00032, FLOAT____00033, FLOAT____00034, FLOAT____00035, FLOAT____00036, FLOAT____00037, FLOAT____00038, FLOAT____00039, FLOAT____00040, FLOAT____00041, FLOAT____00042, FLOAT____00043, FLOAT____00044, FLOAT____00045, FLOAT____00046, FLOAT____00047, FLOAT____00048, FLOAT____00049, FLOAT____00050, FLOAT____00051, FLOAT____00052], 0.0) :: defines_var(FLOAT____00053);
constraint float_times(FLOAT____00003, FLOAT____00006, FLOAT____00007) :: defines_var(FLOAT____00007);
constraint float_times(FLOAT____00003, FLOAT____00010, FLOAT____00011) :: defines_var(FLOAT____00011);
constraint float_times(FLOAT____00003, FLOAT____00014, FLOAT____00015) :: defines_var(FLOAT____00015);
constraint float_times(FLOAT____00003, FLOAT____00018, FLOAT____00019) :: defines_var(FLOAT____00019);
constraint float_times(FLOAT____00003, FLOAT____00022, FLOAT____00023) :: defines_var(FLOAT____00023);
constraint float_times(FLOAT____00003, FLOAT____00026, FLOAT____00027) :: defines_var(FLOAT____00027);
constraint float_times(FLOAT____00003, FLOAT____00030, FLOAT____00031) :: defines_var(FLOAT____00031);
constraint float_times(FLOAT____00006, FLOAT____00010, FLOAT____00032) :: defines_var(FLOAT____00032);
constraint float_times(FLOAT____00006, FLOAT____00014, FLOAT____00033) :: defines_var(FLOAT____00033);
constraint float_times(FLOAT____00006, FLOAT____00018, FLOAT____00034) :: defines_var(FLOAT____00034);
constraint float_times(FLOAT____00006, FLOAT____00022, FLOAT____00035) :: defines_var(FLOAT____00035);
constraint float_times(FLOAT____00006, FLOAT____00026, FLOAT____00036) :: defines_var(FLOAT____00036);
constraint float_times(FLOAT____00006, FLOAT____00030, FLOAT____00037) :: defines_var(FLOAT____00037);
constraint float_times(FLOAT____00010, FLOAT____00014, FLOAT____00038) :: defines_var(FLOAT____00038);
constraint float_times(FLOAT____00010, FLOAT____00018, FLOAT____00039) :: defines_var(FLOAT____00039);
constraint float_times(FLOAT____00010, FLOAT____00022, FLOAT____00040) :: defines_var(FLOAT____00040);
constraint float_times(FLOAT____00010, FLOAT____00026, FLOAT____00041) :: defines_var(FLOAT____00041);
constraint float_times(FLOAT____00010, FLOAT____00030, FLOAT____00042) :: defines_var(FLOAT____00042);
constraint float_times(FLOAT____00014, FLOAT____00018, FLOAT____00043) :: defines_var(FLOAT____00043);
constraint float_times(FLOAT____00014, FLOAT____00022, FLOAT____00044) :: defines_var(FLOAT____00044);
constraint float_times(FLOAT____00014, FLOAT____00026, FLOAT____00045) :: defines_var(FLOAT____00045);
constraint float_times(FLOAT____00014, FLOAT____00030, FLOAT____00046) :: defines_var(FLOAT____00046);
constraint float_times(FLOAT____00018, FLOAT____00022, FLOAT____00047) :: defines_var(FLOAT____00047);
constraint float_times(FLOAT____00018, FLOAT____00026, FLOAT____00048) :: defines_var(FLOAT____00048);
constraint float_times(FLOAT____00018, FLOAT____00030, FLOAT____00049) :: defines_var(FLOAT____00049);
constraint float_times(FLOAT____00022, FLOAT____00026, FLOAT____00050) :: defines_var(FLOAT____00050);
constraint float_times(FLOAT____00022, FLOAT____00030, FLOAT____00051) :: defines_var(FLOAT____00051);
constraint float_times(FLOAT____00026, FLOAT____00030, FLOAT____00052) :: defines_var(FLOAT____00052);
constraint int2float(INT____00002, FLOAT____00003) :: defines_var(FLOAT____00003);
constraint int2float(INT____00005, FLOAT____00006) :: defines_var(FLOAT____00006);
constraint int2float(INT____00009, FLOAT____00010) :: defines_var(FLOAT____00010);
constraint int2float(INT____00013, FLOAT____00014) :: defines_var(FLOAT____00014);
constraint int2float(INT____00017, FLOAT____00018) :: defines_var(FLOAT____00018);
constraint int2float(INT____00021, FLOAT____00022) :: defines_var(FLOAT____00022);
constraint int2float(INT____00025, FLOAT____00026) :: defines_var(FLOAT____00026);
constraint int2float(INT____00029, FLOAT____00030) :: defines_var(FLOAT____00030);
constraint set_in_reif(1, upgradeSet, BOOL____00001) :: defines_var(BOOL____00001);
constraint set_in_reif(2, upgradeSet, BOOL____00004) :: defines_var(BOOL____00004);
constraint set_in_reif(3, upgradeSet, BOOL____00008) :: defines_var(BOOL____00008);
constraint set_in_reif(4, upgradeSet, BOOL____00012) :: defines_var(BOOL____00012);
constraint set_in_reif(5, upgradeSet, BOOL____00016) :: defines_var(BOOL____00016);
constraint set_in_reif(6, upgradeSet, BOOL____00020) :: defines_var(BOOL____00020);
constraint set_in_reif(7, upgradeSet, BOOL____00024) :: defines_var(BOOL____00024);
constraint set_in_reif(8, upgradeSet, BOOL____00028) :: defines_var(BOOL____00028);
solve maximize FLOAT____00053;
